#!/bin/bash

# This script is under the MIT License.
# Copyright 2019 Jeremiah Haven
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
# files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, 
# merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to 
# do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF 
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE 
# FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION 
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

# echobox, a script needed by ainstall, is a script that takes input and throws it out in an ascci box.
# Example:
# input: "Subscribe to the channel JR Tech & Software!"
# output: ------------------------------------------------
#         | Subscribe to the channel JR Tech & Software! |
#         ------------------------------------------------

# If we don't have an argument, ask for input from empty command line. Commented lines are for debugging.
# First add 4 to the chars variable we will use for the dashes>
if [[ ! $1 == "" ]]; then
	chars=$((${#1} + 4))
	#echo $chars
	# Use printf so that we don't have an automatic new line afterward
	for ((n=0;n<$chars;n++)); do printf "-" ;done
	printf "\n"
	printf "| $1 |\n"
	for ((n=0;n<$chars;n++)); do printf "-" ;done
	printf "\n"
	exit
fi

# If no argument, use read to get input
read message
chars=$((${#message} + 4))
#echo $chars
for ((n=0;n<$chars;n++)); do printf "-" ;done
printf "\n"
printf "| $message |\n"
for ((n=0;n<$chars;n++)); do printf "-" ;done
printf "\n"
