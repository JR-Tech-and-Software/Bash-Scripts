#!/bin/bash

# This script is under the MIT License.
# Copyright 2019-2020 Jeremiah Haven
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
# files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, 
# merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to 
# do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF 
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE 
# FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION 
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.



# ainstall is a script for Debian and Debian-Based distros. It makes it easiar to do tasks like install a package
# by using syntex with only a few letters. For example:
# Instead of using "sudo apt install thepackage",
# just type "ainstall -i thepackage".

# It also takes care of adding ppa's (Ubuntu and Ubuntu Based distros only) in one single command For example:
# Instead of typing the following:
# sudo add-apt-repository ppa://author/repo
# sudo apt update
# sudo apt install thepackage
# 
# Just type "ainstall -ari ppa://author/repo thepackage"
#
# New in 5.1:
# - .lastcupout is stored in /tmp, instead of the folder the user is currently in.
# - Doesn't crash if there is no bin folder in the user's home folder

# Exit upon errors
set -e

# Help command
if [[ $1 == "--help" ]]; then
	echo "----------------------------------------"
	echo "| ainstall: A program for apt          |"
        echo "|                                      |"
        echo "| ainstall is a program that runs on   |"
        echo "| top of apt.                          |"
        echo "|                                      |"
        echo "| Arguments:                           |"
        echo "|                                      |"
	echo "| -i = install a package               |"
        echo "| -r = remove a package                |"
        echo "| -p = purge a package                 |"
	echo "| -si = installs a snap only if        |"
	echo "|       snapcraft is installed.        |"
	echo "| -sr = removes a snap only if         |"
        echo "|       snapcraft is installed.        |"
	echo "| -sic = installs a snap with          |"
	echo "|        --classic flag.               |"
        echo "| -ar = add a repository such as a ppa |"
	echo "| -ari = add repository, than install  |"
	echo "|        package                       |"
        echo "| -i = update a package                |"
        echo "| -u = update the cache using update   |"
        echo "| -du = upgrade system using           |"
	echo "|       dist-upgrade and update        |"
	echo "| -c = Clean up un-needed packages to  |"
	echo "|      save space                      |"
	echo "| --clean = Clean up any files         |"
	echo "|           ainstall may have left     |"
	echo "|           behind.                    |"
	echo "| -ri = Reinstall a package            |"
    echo "| -h = Holds back package              |"
    echo "| -uh = Allows held back package to    |"
    echo "|       update                         |"
    echo "| -sh = Show all held back packages    |"
        echo "----------------------------------------"
	exit
fi

# Go out and look for needed packages like echobox
odir=$(pwd)
if [[ $(ls | grep echobox) == "" ]]; then
	cd /usr/local/bin
	if [[ $(ls | grep echobox) == "" ]]; then
		cd /usr/bin
		if [[ $(ls | grep echobox) == "" ]]; then
			echo "-------------------------------------------------"
                        echo '| A script called "echobox" is not present.     |'
                        echo "| ainstall comes with this package, so try      |"
                        echo "| try putting update in ~/bin, /usr/local/bin,  |"
                        echo "| or /usr/bin. ainstall will not be able to     |"
                        echo "| work without this package and keep throwing   |"
                        echo "| this error until it can find echobox.         |"
                        echo "-------------------------------------------------"
			exit
		fi
	fi
fi
cd ~
if [[ $(ls | grep bin) == "bin" ]]; then
    if [[ $(ls | grep update) == "" ]]; then
            cd /usr/local/bin
            if [[ $(ls | grep update) == "" ]]; then
		    cd /usr/bin
		    if [[ $(ls | grep update) == "" ]]; then
     	                echo "-------------------------------------------------"
            	        echo '| A script called "update" is not present.      |'
                    	echo "| ainstall comes with this package, so try      |"
	                    echo "| try putting update in ~/bin, /usr/local/bin,  |"
            	        echo "| or /usr/bin. ainstall will not be able to     |"
                    	echo "| work without this package and keep throwing   |"
	                    echo "| this error until it can find update.          |"
            	        echo "-------------------------------------------------"
                    	exit
		    fi
            fi
    fi
fi
cd $odir

# Install command
if [[ $1 == "-i" ]]; then
	if [[ $2 == "" ]]; then
		echobox I\ Don\'t\ know\ what\ to\ do\!\ You\ didn\'t\ give\ me\ anything\ to\ install\!
		exit
	fi
	sudo echo Welcome to ainstall!
	echo ""
	
	# Updates cache and puts output in a log file
	sudo apt update > /tmp/.lastcupout
	sudo apt-get install $2
	echo ""
	echo "Done"
	
	# Get rid of log file if requested to and if there
	if [[ $3 == "--clean" ]]; then
                if [[ $(ls /tmp -a | grep .lastcupout) == "" ]]; then
                        echobox Nothing\ to\ clean\ up\.\.\.
                        exit
                fi
		rm /tmp/.lastcupout
	fi
	exit
fi

# Apt's autoremove function command
if [[ $1 == "-c" ]]; then
	sudo echo Welcome to ainstall!
        echo ""
	sudo apt-get autoremove
	echo ""
        echo "Done"
        if [[ $2 == "--clean" ]]; then
		if [[ $(ls /tmp -a | grep .lastcupout) == "" ]]; then
			echobox Nothing\ to\ clean\ up\.\.\.
			exit
		fi
                rm /tmp/.lastcupout
        fi
        exit
fi

# Remove command
if [[ $1 == "-r" ]]; then
        if [[ $2 == "" ]]; then
                echobox I\ Don\'t\ know\ what\ to\ do\!\ You\ didn\'t\ give\ me\ anything\ to\ remove\!
                exit
        fi
        sudo echo Welcome to ainstall!
        echo ""
        sudo apt-get remove $2
        echo ""
        echo "Done"
        if [[ $3 == "--clean" ]]; then
                if [[ $(ls /tmp -a | grep .lastcupout) == "" ]]; then
                        echobox Nothing\ to\ clean\ up\.\.\.
                        exit
                fi
                rm /tmp/.lastcupout
        fi
        exit
fi

# Purge command
if [[ $1 == "-p" ]]; then
        if [[ $2 == "" ]]; then
                echobox I\ Don\'t\ know\ what\ to\ do\!\ You\ didn\'t\ give\ me\ anything\ to\ purge\!
                exit
        fi
        sudo echo Welcome to ainstall!
        echo ""
        sudo apt-get purge $2
        echo ""
        echo "Done"
        if [[ $3 == "--clean" ]]; then
                if [[ $(ls /tmp -a | grep .lastcupout) == "" ]]; then
                        echobox Nothing\ to\ clean\ up\.\.\.
                        exit
                fi
                rm /tmp/.lastcupout
        fi
        exit
fi

# Add repo command
if [[ $1 == "-ar" ]]; then
	sudo echo Welcome to ainstall!
	echo ""
        if [[ $2 == "" ]]; then
                echobox I\ Don\'t\ know\ what\ to\ do\!\ You\ didn\'t\ give\ me\ any\ repository\ to\ add\!
                exit
        fi
	sudo add-apt-repository $2
	sudo apt-get update > /tmp/.lastcupout
	echo ""
        echo "Done"
        if [[ $3 == "--clean" ]]; then
                if [[ $(ls /tmp -a | grep .lastcupout) == "" ]]; then
                        echobox Nothing\ to\ clean\ up\.\.\.
                        exit
                fi
                rm /tmp/.lastcupout
        fi
        exit
fi

# Add repo then install package command
if [[ $1 == "-ari" ]]; then
        sudo echo Welcome to ainstall!
	echo ""
        if [[ $2 == "" ]]; then
                echobox I\ Don\'t\ know\ what\ to\ do\!\ You\ didn\'t\ give\ me\ any\ repository\ to\ add\!
                exit
        fi
	echo Adding Repository...
        sudo add-apt-repository $2
	echo Updating Cache...
	sudo apt-get update > /tmp/.lastcupout
	echo Installing Software...
	if [[ $3 == "" ]]; then
                echobox I\ Don\'t\ know\ what\ to\ do\!\ You\ didn\'t\ give\ me\ anything\ to\ install\!
                exit
        fi
	sudo apt-get install $3
        echo ""
        echo "Done"
        if [[ $4 == "--clean" ]]; then
                if [[ $(ls /tmp -a | grep .lastcupout) == "" ]]; then
                        echobox Nothing\ to\ clean\ up\.\.\.
                        exit
                fi
                rm /tmp/.lastcupout
        fi
        exit
fi

# Update command (Requires update script)
if [[ $1 == "-u" ]]; then
	sudo echo Welcome to ainstall!
	echo ""
	update --choice=1
	echo ""
	echo Done
	exit
fi

# Dist-upgrade command (Requires update script)
if [[ $1 == "-du" ]]; then
	sudo echo Welcome to ainstall!
	echo ""
	update --choice=3
	echo ""
	echo Done
	exit
fi

# Remove log file
if [[ $1 == "--clean" ]]; then
	if [[ $(ls /tmp -a | grep .lastcupout) == "" ]]; then
            echobox Nothing\ to\ clean\ up\.\.\.
            exit
    fi
    rm /tmp/.lastcupout
    exit
fi

# Install a snap command
if [[ $1 == "-si" ]]; then
	sudo echo Welcome to ainstall!
	sudo snap install $2
	echo Done
	exit
fi

# Remove a snap command
if [[ $1 == "-sr" ]]; then
        sudo echo Welcome to ainstall!
        sudo snap remove $2
        echo Done
	exit
fi

# Install a snap with the --classic argument at the end
if [[ $1 == "-sic" ]]; then
	sudo echo Welcome to ainstall!
	sudo snap install $2 --classic
	echo Done
	exit
fi

# Re-install command
if [[ $1 == "-ri" ]]; then
	sudo echo Welcome to ainstall!
	sleep 1
	echo ""
	echo Removing Package $2...
	sudo apt-get remove $2
	echo ""
	echo Updating Cache...
	sudo apt-get update > .lastcupout
	echo ""
	echo Installing Package $2...
	sudo apt-get install $2
	echo Done
	exit
fi

# Hold back a package
if [[ $1 == "-h" ]]; then
    sudo echo Welcome to ainstall!
    sudo apt-mark hold $2
    echo ""
    echo "Success! Package $2 was held back and will no longer"
    echo "recieve updates."
    exit
fi

# Unhold a package
if [[ $1 == "-uh" ]]; then
    sudo echo Welcome to ainstall!
    sudo apt-mark unhold $2
    echo "Success! Package $2 will now recieve updates."
    exit
fi

# Show held packages
if [[ $1 == "-sh" ]]; then
    echo Welcome to ainstall!
    echo ""
    sleep 1
    echo "The following packages are held back:"
    apt-mark showhold
    echo ""
    echo "You can use either 'ainstall -uh [PACKAGE]' or as root,"
    echo "'apt-mark unhold [PACKAGE]' to allow updates to the specific package."
    exit
fi

# If no argument is typed, show this.
echobox Not\ Found\.\ Try\ again\ with\ \'\-\-help\'\.
exit
